Direto no LeetCode e pelo tablet.

A plataforma me apresentava uma solução, que eu nem olhei.

Após postar, vendo as postagens dos demais, notei que poderia fazer um código
mais rusticiano e utilizando uma linha única, além de observar um detalhe que
não tinha percebido quando imaginando uma solução, que tornaria mais simples.

Então, fiz um segundo modelo.

Em seguida, resolvi fazer um teste alterando into_iter por iter, para ver
diferenças. Então, fiz um terceiro modelo.

Modelo 1 (Rust): 0ms. Melhor, impossível. Memória, excelente. Criava um
acumulador, para a resposta, e fazia uma varredura direta, fazendo uma
conversão, desnecessária (poderia fazer o teste direto), para comparar valores.

Modelo 2 (Rust): 0ms. Melhos, impossível. Memória, mediana. Utilizava conceitos
de Rust para montar uma linha única, apesar de dividida em partes.

Modelo 2 (Rust): 0ms. Melhor, impossível. Memória, muito ruim. Era o mesmo
código anterior, alterando, somente, iter no lugar de into_iter.

Aparentemente, é melhor utilizar into_iter, quando não houver mais necessidade
de se utilizar um vetor ou alguma forma de iterador.

Por ser um problema simples, poderia ter-me alongado e fazer diversos testes.
Mas fica para outras oportunidades.
