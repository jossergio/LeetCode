class Solution {
private:
    vector<int> temp;
    
    int i, f; // Controle inicial e final do vetor geral
    
    int soma = 0;
    int somaAlex = 0;
    int somaLee = 0;
    
    int modelo = 0;

// As próximas funções poderiam ser uma. Mas, quiz evitar passagens por referência com variáveis globais
    void somarAlex (int valor, int op) { // op: +1 adiciona, -1 subtrai
        somaAlex += op * valor;
        soma -= op * valor; // É o inverso
    }
    
    void somarLee (int valor, int op) { // idem somarAlex
        somaLee += op * valor;
        soma -= op * valor;
    }
    
    bool ganha (int alex, int lee) {
        if (f > i) {
            if (alex == 1)
                somarAlex (temp [i++], 1);
            else // é 1
                somarAlex (temp [f--], 1);
            if (lee == 1)
                somarLee (temp [i++], 1);
            else
                somarLee (temp [f--], 1);
            switch (modelo) {
                case 1:
                    if ((somaAlex > (soma + somaLee)) || 
                            ganha (1, -1) ||
                            ganha (-1, 1) ||
                            ganha (1, 1) ||
                            ganha (-1, -1))
                        return true;
                    break;
                case 2:
                    if ((somaAlex > (soma + somaLee)) || 
                            ganha (-1, 1) ||
                            ganha (1, 1) ||
                            ganha (1, -1) ||
                            ganha (1, -1))
                        return true;
                    break;
                    
                default:
                    if ((somaAlex > (soma + somaLee)) || 
                            ganha (1, 1) ||
                            ganha (1, -1) ||
                            ganha (-1, 1) ||
                            ganha (-1, -1))
                        return true;
            } // switch modelo
            if (lee == 1)
                somarLee (temp [--i], -1);
            else
                somarLee (temp [++f], -1);
            if (alex == 1)
                somarAlex (temp [--i], -1);
            else
                somarAlex (temp [++f], -1);
        }
        return false; // De uma forma ou de outra, Alex NÃO ganha
    } // ganha

public:
    bool stoneGame(vector<int>& piles) {
        for (int a = 0; a < piles.size (); a++)
            soma += piles [a];
        temp = piles;
        if (piles.size () > 2) {
            i = 0;
            f = temp.size () - 1;
            if (temp [1] > temp [f]) {
                modelo = 2;
                return (ganha (-1, 1) || ganha (1, 1) || ganha (-1, -1) || ganha (1, -1));
            }
            if (temp [0] > temp [f]) {
                modelo = 1;
                return (ganha (1, -1) || ganha (-1, 1) || ganha (1, 1) || ganha (-1, -1));
            } else { // if temp 0 > temp f
                modelo = 2;
                return (ganha (1, 1) || ganha (1, -1) || ganha (-1, 1) || ganha (-1, -1));
            } // if temp 0 > temp f ... else ...
        } // if piles.size > 2
        return true; // De uma forma ou de outra, ganha Alex
    } // stoneGame
}; // class Solution

int main() {
    Solution solucao;
//    vector<int> teste = {3, 7, 2, 3};
//    vector<int> teste = {5, 3, 4, 5};
/*
    vector<int> teste = {288,479,157,128,401,125,380,492,493,173,90,88,248,189,136,492,438,65,399,68,213,255,32,
                         98,212,174,2,435,323,6,54,109,133,17,156,152,22,154,289,488,181,464,445,483,247,298,77,386,
                         384,152,225,358,171,274,282,339,388,125,20,363,393,391,444,284,434,233,138,179,140,60,246,
                         266,319,372,446,271,50,120,85,148,233,143,100,322,269,347,370,227,336,230,42,260,251,330,359,
                         477,342,471,102,336,480,441,401,95,22,309,147,412,442,89,435,497,249,315,173,110,350,484,56,
                         227,30,157,204,312,95,319,44,381,422,144,198,283,26,27,465,301,407,357,452,432,228,3,404,404,
                         291,276,336,157,28,109,434,373,356,140,295,492,52,106,294,402,354,378,109,91,51,340,102,393,
                         313,405,146,301,2,487,268,190,6,461,372,457,44,356,272,491,349,232,1,272,154,156,214,275,460,
                         19,289,462,163,455,22,285,464,263,330,3,193,164,52,171,247,314,83,381,239,103,407,181,315,88,
                         147,274,341,354,229,206,298,489,297,4,415,484,295,118,372,499,272,216,248,273,49,391,489,16,
                         266,326,428,346,426,69,354,229,24,482,497,103,112,91,331,210,230,390,183,256,172,473,494,372,
                         249,36,464,486,121,415,273,315,472,125,59,196,334,172,196,148,351,72,99,406,304,96,429,477,453,
                         168,187,399,299,409,483,500,431,306,153,392,386,378,220,128,42,497,104,348,307,465,119,1,220,
                         175,201,413,7,154,423,396,167,170,407,316,26,317,334,426,343,470,70,133,255,338,392,31,45,365,
                         479,440,179,276,68,378,259,196,473,268,204,192,56,195,325,402,342,129,385,210,83,51,64,238,21,
                         358,153,274,375,320,31,458,180,309,134,35,272,386,255,82,370,404,334,367,423,359,398,478,102,
                         185,262,221,337,293,277,464,477,207,312,480,337,140,39,407,41,441,417,189,218,43,369,83,87,215,
                         218,463,127,1,87,105,170,122,87,231,261,317,310,131,201,151,440,38,115,3,347,488,15,225,66,216,
                         351,109,383,421,257,324,271,24,161,493,100,499,329,170,183,139,281,449,81,294,191,388,71,178,
                         279,119,342,477,175,62,148,303,468,368,321,120,208,500,417,468,319,470,486,335,389,129,223,59,
                         400,14,461,494,50,208,423,414,148,228,497,30}; // Inseri alguns fins de linha para melhor visual

     vector<int> teste = {29,99,110,199,66,44,64,47,11,164,34,153,120,33,144,87,58,102,
     48,30,102,199,56,69,67,166,97,16,89,163,142,39,38,151,25,142,4,200,
     118,121,36,30,181,46,157,95,18,46,144,108,53,118,58,76,192,42,57,54,
     171,78,130,5,199,95,91,37,124,118,140,46,116,112,106,19,37,24,33,43,
     67,40,54,140,147,79,189,180,47,21,158,2,76,44,6,143,139,129,77,40,
     174,1,134,163,71,17,75,35,27,131,152,116,195,19,148,22,26,82,106,
     169,99,172,157,166,141,133,171,103,13,14,4,110,134,92,28,165,31,80,
     156,77,14,108,194,190,183,17,145,161,194,153,200,185,199,74,149,166,
     82,138,113,137,105,193,192,107,32,27,60,110,63,162,104,78,119,115,101,
     14,44,196,122,117,117,164,59,12,77,192,25,147,181,135,173,55,188,74,64,78,57,167,58,57,70,58};
*/
    vector<int> teste = {162,259,203,207,455,174,414,403,49,125,104,87,273,354,345,
                         299,132,240,427,242,497,364,289,431,176,99,154,18,92,300,397,
                         395,208,388,379,203,16,413,223,60,422,410,310,409,295,306,230,
                         417,382,379,305,275,221,370,173,328,96,450,52,351,250,122,331,
                         17,203,76,384,137,31,396,383,487,67,212,198,241,22,85,253,28,92,
                         210,294,444,159,382,52,277,145,225,60,140,198,460,355,66,81,370,
                         149,147,311,335,445,481,80,370,332,175,8,8,274,427,87,267,15,89,
                         135,279,318,123,282,254,302,457,495,252,125,408,430,178,318,411,
                         324,99,59,312,496,320,76,445,373,382,104,15,106,119,379,296,86,245,
                         260,415,193,14,336,347,81,434,467,155,472,317,65,411,140,74,156,433,
                         65,226,416,483,411,215,468,447,14,375,137,304,86,10,87,306,162,426,
                         350,107,194,50,9,480,344,156,314,388,172,206,114,181,12,155,405,465,
                         333,314,224,371,414,423,82,493,128,462,397,128,7,126,74,393,106,66,
                         115,185,445,254,262,183,192,222,416,8,103,8,436,349,376,488,77,149,
                         460,327,387,85,350,72,343,150,53,410,33,23,212,68,156,319,38,391,280,
                         220,82,117,113,459,104,305,385,330,285,248,91,313,55,492,197,36,264,
                         333,26,192,106,81,309,207,348,134,108,325,406,140,41,367,327,402,432,
                         419,454,336,459,49,118,289,177,161,249,295,455,252,388,164,304,465,284,
                         404,163,23,252,60,42,471,199,52,192,401,113,428,426,454,109,111,363,152,
                         83,287,4,31,125,186,137,365,269,417,350,292,385,372,280,243,470,465,335,194,
                         351,319,499,329,214,140,350,348,83,374,144,3,118,321,258,196,302,307,399,122,
                         487,111,480,205,106,270,173,80,278,252,300,127,123,63,172,131,355,223,241,49,
                         297,323,73,388,380,147,167,63,487,320,140,86,315,462,425,463,171,333,310,436,
                         448,76,478,245,179,450,56,324,92,401,483,321,133,19,400,262,74,61,313,268,276,
                         337,353,118,442,234,356,374,83,60,319,355,242,89,296,179,323,33,394,410,65,
                         198,396,238,464,258,464,278,60,316,298,141,34,152,196,102,124,442,491,456,34,
                         413,234,483,382,192,50,90,30,215,127,464,11,403,44,162,216,
                         130,399,262,238,215,6,483,262,49,280,379};
    
    if (solucao.stoneGame (teste))
        cout << "Há ganho para Alex!" << endl;
    else
        cout << "Não há ganho para Alex!" << endl;
}
