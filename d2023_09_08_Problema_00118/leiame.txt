Direto no LeetCode.

Era o mesmo problema do dia 19/07/2022, que eu tinha feito alguns modelos em
GoLang. Porém, resolvi ignorar isso e fazer em C++, do zero, no lugar de
repostar.

Modelo 1 (C++): 0ms. Melhor, impossível. Memória, mediana. Foi um código ruim,
complexo. Mas, ficou bacana, na execução.

Modelo 2 (C++): 4ms. Medianamente ruim. Memória, ruim. Foi um código mais curto.
Porém, na execução, se não for coisa do LeetCode, ficou ruim.

Modelo 3 (C++): 0ms. Melhor, impossível. Memória, horrível. Posso dizer que é um
algoritmo básico.

Muitos em 0ms. Ninguém acima de 4ms. O gráfico ía até 13ms.

Pela simplicidade, ainda pensei em fazer em outras linguagens, tipo GoLang,
Rust e Python, além de ficar brincando com implementações. Mas, deixemos, por
enquanto.

====
Em 29/08/2024, adicionei um modelo em Rust.

Utilizei como base o mais recente em C++. Em seguida, resolvi fazer com base na
segunda postagem feita em C++ (e com maior tempo), porém, era uma forma com
menos linhas.

Modelo 4 (Rust): 1ms. Mediano. Memória, mediana. Era uma tradução, com alguns
ajustes para Rust, do tercerio modelo em C++.

Modelo 5 (Rust): 1ms. Mediano. Memória, mediana. Era uma tradução, com alguns
ajustes para Rust, do segundo modelo em C++.

Só havia barras, mesmo, em 0ms, em um gráfico que ía até 10ms.

A postagem que era apresentada em 0ms utilizava um algoritmo recursivo com a 
mesma função do problema, fazendo por partes anteriores (n - 1), e adicionando a
nova etapa ao final.


