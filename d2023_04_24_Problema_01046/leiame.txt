Direto no LeetCode e pelo celular.

Era o mesmo problema do dia 07/04/2022. Porém, decidi "ajeitar" um pouco.

E, até, melhorou.

Havia duas postagens. Inicialmente, postei a "mais bonita", apesar de ser
um pouco mais lenta.

Mas, em seguida, analisando as postagens dos demais, observei que a base da
"mais feia" era, sempre, melhor. Então, também repostei essa, ajeitando.

O "ajeitar" foi, só, retirar a utilização de duas variáveis, jogando, tudo, para
um cálculo único.

Modelo 1 (Python 3): 40ms. Horrível. Memória, mediana e com a maioria. Utilizava
heap, da própria linguagem, similar à segunda postagem do dia 07/04/2022.

Modelo 2 (Python 3): 36ms. Mediano. Memória, igual ao anterior. Utilizava
um sistema de ordenamento a cada iteração. Ou seja, heap perdeu.

Não vi abaixo de 13ms, bem isolado, utilizando heap e bem parecido com o meu
da postagem anterior.

A grande concentração era entre 28 e 40ms. O gráfico ía até 50ms. 

================
Em 01/05/2023, alguns dias depois, decidi ver como ficaria em c++.

E fiz dois modelos. Um utilizando ordenação e outro utilizando heap (fila de
prioridade, como sua estrutura é chamad em C++).

Foi um bom estudo.

Modelo 3 (C++): 5ms. Horrível. Memória, bem no limite do gráfico. Ficava
ordenando a cada iteração.

Modelo 4 (C++): 0ms. Melhor, impossível. Memória, igual ao anterior. Utilizava
uma fila de prioridades (heap) do C++.

Em C++, o gráfico ía até 14ms. Não vi acima de 5ms.

